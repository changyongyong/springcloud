<?xml version="1.0"?>
<project
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
	xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.5.2.RELEASE</version>
	</parent>
	<artifactId>product-service</artifactId>
	<name>service</name>
	<url>http://maven.apache.org</url>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>

		<!-- 第三方jar版本 -->
		<dubbo.version>2.5.3</dubbo.version>
		<zookeeper.version>3.4.6</zookeeper.version>
		<druid.version>1.0.7</druid.version>
	</properties>
	<dependencies>
		<!-- spring boot start -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-log4j2</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aspects</artifactId>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
		</dependency>
		<!-- 热部署 -->
		<!-- devtools可以实现页面热部署（即页面修改后会立即生效，这个可以直接在application.properties文件中配置spring.thymeleaf.cache=false来实现） -->
		<!-- 实现类文件热部署（类文件修改后不会立即生效），实现对属性文件的热部署。 -->
		<!-- 即devtools会监听classpath下的文件变动，并且会立即重启应用（发生在保存时机），注意：因为其采用的虚拟机机制，该项重启是很快的 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<!-- optional=true,依赖不会传递，该项目依赖devtools；之后依赖boot项目的项目如果想要使用devtools，需要重新引入 -->
			<optional>true</optional>
			<!-- 生产不准有该包，只在开发环境使用 -->
			<scope>provided</scope>
		</dependency>
		<!-- spring boot end -->

		<!-- shengyibao start -->
		<dependency>
			<groupId>com.shengyibao</groupId>
			<artifactId>product-api</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>
		<!-- 公用的class需要封装，先用该包的 -->
		<dependency>
			<groupId>com.syb</groupId>
			<artifactId>api-base</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>
		<!-- shengyibao end -->

		<!-- 第三方依赖包 -->
		<!-- dubbo required jars start -->
		<dependency>
			<groupId>io.netty</groupId>
			<artifactId>netty</artifactId>
			<version>3.7.0.Final</version>
		</dependency>
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>dubbo</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring</artifactId>
				</exclusion>
			</exclusions>
			<version>${dubbo.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.zookeeper</groupId>
			<artifactId>zookeeper</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-api</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-log4j12</artifactId>
				</exclusion>
				<exclusion>
					<groupId>log4j</groupId>
					<artifactId>log4j</artifactId>
				</exclusion>
			</exclusions>
			<version>${zookeeper.version}</version>
		</dependency>
		<dependency>
			<groupId>com.101tec</groupId>
			<artifactId>zkclient</artifactId>
			<exclusions>
				<exclusion>
					<artifactId>log4j</artifactId>
					<groupId>log4j</groupId>
				</exclusion>
			</exclusions>
			<version>0.10</version>
		</dependency>
		<!-- dubbo required jars end -->

		<!-- jdbc连接池 start -->
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>druid</artifactId>
			<version>${druid.version}</version>
		</dependency>
		<!-- jdbc连接池 end -->

		<!-- 通用dao层代码生成器 start -->
		<dependency>
			<groupId>com.shengyibao</groupId>
			<artifactId>product-dao</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis-spring</artifactId>
			<version>1.2.2</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
		</dependency>
		<!-- 通用dao层代码生成器 end -->

	</dependencies>

	<build>
		<finalName>shengyibao-product-service</finalName>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<!-- 资源根目录排除各环境的配置，使用单独的资源目录来指定 -->
				<excludes>
					<exclude>dev/**</exclude>
					<exclude>test/**</exclude>
					<exclude>pro/**</exclude>
					<exclude>pre/**</exclude>
					<exclude>common/**</exclude>
				</excludes>
			</resource>
			<resource>
				<!-- 根据参数指定资源目录 -->
				<directory>src/main/resources/dev</directory>
				<!-- 指定编译后的目录即生成文件位置（默认为WEB-INF/class） -->
				<targetPath>../../config</targetPath>
			</resource>
			<resource>
				<!-- 根据参数指定资源目录 -->
				<directory>src/main/resources/${profiles.active}</directory>
				<!-- 指定编译后的目录即生成文件位置（默认为WEB-INF/class） -->
				<targetPath>../config</targetPath>
			</resource>
			<resource>
				<!-- 根据参数指定资源目录 -->
				<directory>src/main/resources/common</directory>
				<!-- 指定编译后的目录即生成文件位置（默认为WEB-INF/class） -->
				<targetPath>./</targetPath>
			</resource>
			<resource>
				<directory>${project.basedir}/lib</directory>
				<targetPath>BOOT-INF/lib/</targetPath>
				<includes>
					<include>**/*.jar</include>
				</includes>
			</resource>
		</resources>

		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<mainClass>com.syb.product.ProductApplication</mainClass>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<!-- 本地开发环境 -->
			<id>dev</id>
			<properties>
				<profiles.active>dev</profiles.active>
			</properties>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
		</profile>
		<profile>
			<!-- 测试环境 -->
			<id>test</id>
			<properties>
				<profiles.active>test</profiles.active>
			</properties>
		</profile>
		<profile>
			<!-- 预发布环境 -->
			<id>pre</id>
			<properties>
				<profiles.active>pre</profiles.active>
			</properties>
		</profile>
		<profile>
			<!-- 生产环境 -->
			<id>pro</id>
			<properties>
				<profiles.active>pro</profiles.active>
			</properties>
		</profile>

	</profiles>

</project>
